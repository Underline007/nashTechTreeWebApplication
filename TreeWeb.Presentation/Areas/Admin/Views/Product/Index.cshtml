@model TreeWeb.Application.Helper.PaginatedList<TreeWeb.Core.Entities.Product>
@{
    ViewData["Title"] = "Product Index";
}

<h2 class="text-3xl font-bold mb-4">Product Index</h2>

<p>
    <a asp-action="Create" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">Create New</a>
</p>

<form id="searchForm" asp-action="Index" method="get">
    <div class="flex items-center mb-4">
        <input type="hidden" name="sortOrder" value="@ViewData["CurrentSort"]" />
        <input type="text" name="searchString" placeholder="Search by name" value="@ViewData["CurrentFilter"]" class="mr-2 rounded border border-gray-300 px-2 py-1" />
        <input type="submit" value="Search" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded" />
    </div>
</form>

<a href="#" id="sortLink" class="btn btn-link">Sort</a>

<table class="table w-full border-collapse border border-gray-300">
    <thead>
        <tr>
            <th class="border border-gray-300 px-4 py-2">
                @Html.DisplayNameFor(model => model[0].Name)
            </th>
            <th class="border border-gray-300 px-4 py-2">
                @Html.DisplayNameFor(model => model[0].Description)
            </th>
            <th class="border border-gray-300 px-4 py-2">
                @Html.DisplayNameFor(model => model[0].Price)
            </th>
            <th class="border border-gray-300 px-4 py-2">
                @Html.DisplayNameFor(model => model[0].Quantity)
            </th>
            <th class="border border-gray-300 px-4 py-2">
                Category
            </th>
            <th class="border border-gray-300 px-4 py-2">
                Supplier
            </th>
            <th class="border border-gray-300 px-4 py-2">
                Image
            </th>
            <th class="border border-gray-300 px-4 py-2"></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var product in Model)
        {
            <tr>
                <td class="border border-gray-300 px-4 py-2">
                    @Html.DisplayFor(modelItem => product.Name)
                </td>
                <td class="border border-gray-300 px-4 py-2">
                    @Html.DisplayFor(modelItem => product.Description)
                </td>
                <td class="border border-gray-300 px-4 py-2">
                    @Html.DisplayFor(modelItem => product.Price)
                </td>
                <td class="border border-gray-300 px-4 py-2">
                    @Html.DisplayFor(modelItem => product.Quantity)
                </td>
                <td class="border border-gray-300 px-4 py-2">
                    @if (product.Category != null)
                    {
                        @Html.DisplayFor(modelItem => product.Category.Name)
                    }
                    else
                    {
                        <span>None</span>
                    }
                </td>
                <td class="border border-gray-300 px-4 py-2">
                    @if (product.Supplier != null)
                    {
                        @Html.DisplayFor(modelItem => product.Supplier.Name)
                    }
                    else
                    {
                        <span>None</span>
                    }
                </td>
                <td class="border border-gray-300 px-4 py-2">
                    @if (product.Image != null)
                    {
                        <img src="@product.Image" alt="Product Image" class="max-w-xs" />
                    }
                    else
                    {
                        <img src="https://e7.pngegg.com/pngimages/980/697/png-clipart-empty-set-null-set-computer-icons-mathematics-mathematics-triangle-symbol-thumbnail.png" alt="Default Image" class="max-w-xs" />
                    }
                </td>
                <td class="border border-gray-300 px-4 py-2">
                    <button type="button" class="text-blue-500 hover:underline focus:outline-none" onclick="window.location.href='@Url.Action("Edit", new { id = product.ProductId })'">Edit</button> |
                    <button type="button" class="text-blue-500 hover:underline focus:outline-none" onclick="window.location.href='@Url.Action("Detail", new { id = product.ProductId })'">Detail</button> |
                    <button type="button" class="text-red-500 hover:underline focus:outline-none" onclick="if(confirm('Are you sure you want to delete this product?')) window.location.href='@Url.Action("Delete", new { id = product.ProductId })'">Delete</button>
                </td>

            </tr>
        }
    </tbody>
</table>

<nav aria-label="Page navigation">
    <ul class="pagination">
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                <a class="page-link" asp-action="Index" asp-route-pageNumber="@i" asp-route-sortOrder="@ViewData["CurrentSort"]">@i</a>
            </li>
        }
    </ul>
</nav>
